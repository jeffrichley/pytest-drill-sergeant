name: CI

on:
  push:
    branches: [main]
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Install deps (lean)
        run: uv sync --group ci

      - name: Run tests with coverage
        run: uv run pytest tests --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=50

      - name: Run quality gates (Python 3.12 only)
        if: ${{ matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest' }}
        run: |
          uv run ruff check src tests --fix --config=pyproject.toml
          uv run black src tests --config=pyproject.toml
          uv run mypy src tests --config-file=pyproject.toml
          uv run xenon --max-absolute B src
          uv run validate-pyproject pyproject.toml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: ${{ matrix.os }},python${{ matrix.python-version }}
          fail_ci_if_error: false  # Don't fail CI if Codecov fails
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
